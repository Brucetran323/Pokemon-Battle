1. pip install flask-wtf
2. make a forms.py file in your app folder

forms.py imports:
from flask_wtf import FlaskForm <--- this imports the form we installed
from wtforms import StringField, PasswordField, SubmitField 
                        ^           ^               ^  <--- These labels used to show the form type        
from wtforms.validators import DataRequired, EqualTo <--- These are methods to add on to the form types

3.create a class and make each input data you need:
class exampleForm(FlaskForm):
exmaple = StringField('Example', validators = [DataRequired])
^           ^             ^         ^               ^
info      form type    form name   methods        method type
PasswordField is simular but after data required, there is a EqualTo in the confirm password section

4. in routes youll need to import your class you just created:
form .forms import SignUpForm
        ^               ^
    file location   class name

5. Secret key is required:
in config.py add to your config class:
SECRET_KEY = os.environ.get('SECRET_KEY')
in your .env add a SECRET_KEY into it:
SECRET_KEY=**WHATEVER YOU WANT IT TO BE**

6. in routes import: 
from .forms import SignUpForm
also in routes we need to add the form to the page, 
@app.route('/register')
def registerPage():
    form = SignUpForm() <--- make sure to add the () to execute the form 
    return render_template('register.html', form = form) <--- form = form means the form is equal to the name of the form youre calling

7. on the hmtl page, use jinja to execute the forms 

8. add in {{ form.hidden_tag() }} <--- must be added in order for passwords to be secure

9. well need to turn the form into a request post method, in routes, add this to your from flask import request

10. in your html form, add method = "POST"

11. make a models.py in app folder this will be our database file

12. installs: pip install flask-sqlalchemy flask-migrate
once those installs are done install: pip install psycopg2

13. in models.py import this:
from flask_sqlalchemy import SQLAlchemy
from datetime import datetime
db = SQLAlchemy()
you'll have to add your DB key into .env and add ql after prosgres<--add ql to end of this
youll also have to go into config to call your database from .env
config:
    SQLALCHEMY_DATABASE_URI = os.environ.get('SQLALCHEMY_DATABASE_URI')
    SQLALCHEMY_TRACK_MODIFICATIONS = False
.env:
    SQLALCHEMY_DATABASE_URI=postgresql:xxxxxxx
                                    ^add ql to here